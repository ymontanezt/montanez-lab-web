rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Reglas para imágenes de perfil de usuarios
    match /users/{userId}/profile/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Reglas para imágenes de galería
    match /gallery/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.admin == true;
    }
    
    // Reglas para imágenes de servicios
    match /services/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.admin == true;
    }
    
    // Reglas para imágenes de equipo
    match /team/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.admin == true;
    }
    
    // Reglas para documentos del sitio
    match /site/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.admin == true;
    }
    
    // Reglas para archivos temporales
    match /temp/{allPaths=**} {
      allow read, write: if request.auth != null;
      // Los archivos temporales se eliminan automáticamente después de 24 horas
    }
    
    // Reglas para backups
    match /backups/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.token.admin == true;
    }
    
    // Reglas para logs
    match /logs/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.token.admin == true;
    }
    
    // Reglas para archivos de configuración
    match /config/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.admin == true;
    }
    
    // Reglas para archivos públicos
    match /public/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.admin == true;
    }
    
    // Reglas para archivos privados
    match /private/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.token.admin == true;
    }
  }
}
