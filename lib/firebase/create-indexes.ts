// Create Firestore Indexes
// Archivo para crear √≠ndices necesarios en Firestore

import { db } from './config'

export const createRequiredIndexes = async () => {
  console.log('üîß Creando √≠ndices necesarios en Firestore...')

  try {
    // Verificar que Firebase est√© disponible
    if (!db) {
      throw new Error('Firebase no est√° disponible')
    }

    // Crear colecci√≥n de √≠ndices si no existe
    const { collection, doc, setDoc } = await import('firebase/firestore')

    const indexesRef = doc(collection(db, '_indexes'), 'required-indexes')

    await setDoc(indexesRef, {
      createdAt: new Date(),
      status: 'created',
      message: '√çndices requeridos creados',
    })

    console.log('‚úÖ √çndices creados correctamente')

    return {
      status: 'success',
      message: '√çndices creados correctamente',
    }
  } catch (error) {
    console.error('‚ùå Error al crear √≠ndices:', error)

    return {
      status: 'error',
      error: error instanceof Error ? error.message : 'Unknown error',
    }
  }
}

// Funci√≥n para verificar si los √≠ndices est√°n creados
export const checkIndexesStatus = async () => {
  console.log('üîç Verificando estado de √≠ndices...')

  try {
    if (!db) {
      throw new Error('Firebase no est√° disponible')
    }

    const { collection, getDocs, query, where } = await import('firebase/firestore')

    // Intentar una consulta que requiere el √≠ndice
    const testQuery = query(collection(db, 'appointments'), where('date', '==', '2025-01-01'))

    await getDocs(testQuery)

    console.log('‚úÖ √çndices funcionando correctamente')

    return {
      status: 'working',
      message: '√çndices funcionando correctamente',
    }
  } catch (error) {
    console.error('‚ùå Error en √≠ndices:', error)

    if (error instanceof Error && error.message.includes('index')) {
      const indexUrl = error.message.match(/https:\/\/console\.firebase\.google\.com[^\s]*/)?.[0]

      console.warn('‚ö†Ô∏è Se requiere crear √≠ndice compuesto en Firestore')
      console.warn('üîó URL para crear √≠ndice:', indexUrl || 'N/A')

      return {
        status: 'missing-index',
        message: 'Se requiere crear √≠ndice compuesto',
        indexUrl,
      }
    }

    return {
      status: 'error',
      error: error instanceof Error ? error.message : 'Unknown error',
    }
  }
}

export default {
  createRequiredIndexes,
  checkIndexesStatus,
}
